"""empty message

Revision ID: a2bced357658
Revises: 7f2feeba88a5
Create Date: 2025-02-01 13:30:21.689447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a2bced357658'
down_revision = '7f2feeba88a5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compliance_audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('physician',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('specialty', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sale_date', sa.DateTime(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(length=100), nullable=False),
    sa.Column('policy_number', sa.String(length=50), nullable=False),
    sa.Column('coverage_details', sa.JSON(), nullable=True),
    sa.Column('copay', sa.Float(), nullable=True),
    sa.Column('coverage_limit', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('policy_number')
    )
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('shift_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('shift_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('shift_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('shift_type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('insurance_id', sa.Integer(), nullable=False),
    sa.Column('claim_date', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['insurance_id'], ['insurances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('billing_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('payment_status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('method_type', sa.String(length=50), nullable=False),
    sa.Column('provider', sa.String(length=100), nullable=True),
    sa.Column('account_number', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_detail',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('insurance')
    op.drop_table('sales_report')
    with op.batch_alter_table('customer_interaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('interaction_date', sa.DateTime(), nullable=False))
        batch_op.alter_column('interaction_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.drop_column('timestamp')

    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invoice_type', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('invoice_date', sa.DateTime(), nullable=False))
        batch_op.add_column(sa.Column('sent_status', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('payment_status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('payments_made', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.drop_column('status')
        batch_op.drop_column('issue_date')

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.drop_constraint('payroll_employee_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'employee', ['employee_id'], ['id'])

    with op.batch_alter_table('sales_history', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sale_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('unit_price', sa.Float(), nullable=False))
        batch_op.alter_column('date_sold',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'sale', ['sale_id'], ['id'])

    with op.batch_alter_table('time_log', schema=None) as batch_op:
        batch_op.add_column(sa.Column('shift_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('time_log_employee_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'employee', ['employee_id'], ['id'])
        batch_op.create_foreign_key(None, 'shift', ['shift_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('time_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('time_log_employee_id_fkey', 'user', ['employee_id'], ['id'])
        batch_op.drop_column('shift_id')

    with op.batch_alter_table('sales_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('date_sold',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
        batch_op.drop_column('unit_price')
        batch_op.drop_column('sale_id')

    with op.batch_alter_table('payroll', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('payroll_employee_id_fkey', 'user', ['employee_id'], ['id'])

    with op.batch_alter_table('invoice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('issue_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.drop_column('payments_made')
        batch_op.drop_column('payment_status')
        batch_op.drop_column('sent_status')
        batch_op.drop_column('invoice_date')
        batch_op.drop_column('invoice_type')

    with op.batch_alter_table('customer_interaction', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.alter_column('interaction_type',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_column('interaction_date')

    op.create_table('sales_report',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('total_sales', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('total_transactions', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='sales_report_pkey')
    )
    op.create_table('insurance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('provider_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('policy_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('coverage_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], name='insurance_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='insurance_pkey'),
    sa.UniqueConstraint('policy_number', name='insurance_policy_number_key')
    )
    op.drop_table('order_detail')
    op.drop_table('payment_method')
    op.drop_table('billing_history')
    op.drop_table('claims')
    op.drop_table('shift_schedule')
    op.drop_table('schedule')
    op.drop_table('insurances')
    op.drop_table('sale')
    op.drop_table('resource')
    op.drop_table('physician')
    op.drop_table('compliance_audit')
    # ### end Alembic commands ###
