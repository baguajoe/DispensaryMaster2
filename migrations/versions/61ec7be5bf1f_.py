"""empty message

Revision ID: 61ec7be5bf1f
Revises: 610fbd6060b4
Create Date: 2025-01-21 23:41:34.177994

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '61ec7be5bf1f'
down_revision = '610fbd6060b4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('gift_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('initial_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('current_balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('issued_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('patient_education_resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('total_sales', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_transactions', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_training_resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact_info', sa.JSON(), nullable=True),
    sa.Column('company_name', sa.String(length=200), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('product_categories', sa.JSON(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('payment_terms', sa.String(length=50), nullable=True),
    sa.Column('bank_details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('contact_info', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('physician_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(length=100), nullable=False),
    sa.Column('policy_number', sa.String(length=50), nullable=False),
    sa.Column('coverage_details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('policy_number')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seedbank_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['seedbank_id'], ['seedbanks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shift',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('clock_in_time', sa.DateTime(), nullable=True),
    sa.Column('clock_out_time', sa.DateTime(), nullable=True),
    sa.Column('total_hours', sa.Float(), nullable=True),
    sa.Column('shift_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loyalty_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wishlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['cart.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('receipt_number', sa.String(length=100), nullable=False),
    sa.Column('receipt_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number')
    )
    op.create_table('refund',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('refund_reason', sa.String(length=255), nullable=True),
    sa.Column('refund_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('campaign')
    with op.batch_alter_table('cart', schema=None) as batch_op:
        batch_op.add_column(sa.Column('customer_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('cart_product_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'customer', ['customer_id'], ['id'])
        batch_op.drop_column('last_updated')
        batch_op.drop_column('user_id')
        batch_op.drop_column('quantity')
        batch_op.drop_column('product_id')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('discount', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expires_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('warehouse_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('stock_quantity', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'warehouse', ['warehouse_id'], ['id'])
        batch_op.drop_column('current_stock')

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.add_column(sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('payment_status', sa.String(length=20), nullable=True))
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sku', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('stock', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('price', sa.Numeric(precision=8, scale=2), nullable=False))
        batch_op.add_column(sa.Column('supplier_id', sa.Integer(), nullable=True))
        batch_op.alter_column('dispensary_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('batch_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.create_unique_constraint(None, ['sku'])
        batch_op.create_foreign_key(None, 'supplier', ['supplier_id'], ['id'])
        batch_op.drop_column('supplier')
        batch_op.drop_column('unit_price')
        batch_op.drop_column('current_stock')

    with op.batch_alter_table('promotional_deal', schema=None) as batch_op:
        batch_op.add_column(sa.Column('code', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('discount_percentage', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('start_date', sa.Date(), nullable=True))
        batch_op.add_column(sa.Column('end_date', sa.Date(), nullable=True))
        batch_op.alter_column('tax_rate',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.create_unique_constraint(None, ['code'])
        batch_op.drop_column('discount')

    with op.batch_alter_table('seed_batches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('harvest_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('grower', sa.String(length=100), nullable=True))
        batch_op.drop_constraint('seed_batches_batch_number_key', type_='unique')
        batch_op.drop_column('storage_location')
        batch_op.drop_column('status')
        batch_op.drop_column('batch_number')
        batch_op.drop_column('expiration_date')

    with op.batch_alter_table('seed_reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seed_batch_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('germination_rate', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('harvest_yield', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('report_date', sa.Date(), nullable=False))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key(None, 'seed_batches', ['seed_batch_id'], ['id'])
        batch_op.drop_column('generated_at')
        batch_op.drop_column('report_data')
        batch_op.drop_column('parameters')
        batch_op.drop_column('report_type')

    with op.batch_alter_table('seedbanks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact_email', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('phone_number', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.alter_column('location',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               nullable=False)
        batch_op.create_unique_constraint(None, ['contact_email'])
        batch_op.drop_column('status')
        batch_op.drop_column('contact_info')

    with op.batch_alter_table('storage_conditions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('light_exposure', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_column('location')
        batch_op.drop_column('last_updated')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('storage_conditions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('notes')
        batch_op.drop_column('light_exposure')

    with op.batch_alter_table('seedbanks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contact_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('location',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.drop_column('description')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('contact_email')

    with op.batch_alter_table('seed_reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('report_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('report_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('generated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('notes')
        batch_op.drop_column('report_date')
        batch_op.drop_column('harvest_yield')
        batch_op.drop_column('germination_rate')
        batch_op.drop_column('seed_batch_id')

    with op.batch_alter_table('seed_batches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('expiration_date', sa.DATE(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('batch_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('storage_location', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('seed_batches_batch_number_key', ['batch_number'])
        batch_op.drop_column('grower')
        batch_op.drop_column('harvest_date')
        batch_op.drop_column('name')

    with op.batch_alter_table('promotional_deal', schema=None) as batch_op:
        batch_op.add_column(sa.Column('discount', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('tax_rate',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.drop_column('end_date')
        batch_op.drop_column('start_date')
        batch_op.drop_column('discount_percentage')
        batch_op.drop_column('code')

    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_stock', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('unit_price', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('supplier', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('batch_number',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('dispensary_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('supplier_id')
        batch_op.drop_column('price')
        batch_op.drop_column('stock')
        batch_op.drop_column('sku')

    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('payment_status')
        batch_op.drop_column('refund_amount')

    with op.batch_alter_table('inventory', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_stock', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('stock_quantity')
        batch_op.drop_column('warehouse_id')

    with op.batch_alter_table('discount', schema=None) as batch_op:
        batch_op.drop_column('expires_at')

    with op.batch_alter_table('customer', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('cart', schema=None) as batch_op:
        batch_op.add_column(sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('cart_product_id_fkey', 'product', ['product_id'], ['id'])
        batch_op.drop_column('customer_id')

    op.create_table('campaign',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='campaign_pkey')
    )
    op.drop_table('refund')
    op.drop_table('receipt')
    op.drop_table('payment_log')
    op.drop_table('payment')
    op.drop_table('cart_item')
    op.drop_table('wishlist')
    op.drop_table('support_ticket')
    op.drop_table('subscription')
    op.drop_table('loyalty_history')
    op.drop_table('address')
    op.drop_table('shift')
    op.drop_table('notifications')
    op.drop_table('insurance')
    op.drop_table('appointment')
    op.drop_table('warehouse')
    op.drop_table('supplier')
    op.drop_table('staff_training_resource')
    op.drop_table('sales_report')
    op.drop_table('patient_education_resource')
    op.drop_table('gift_card')
    op.drop_table('employee')
    # ### end Alembic commands ###
